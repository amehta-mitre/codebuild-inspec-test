- name: Execute commands for inspec 
  hosts: localhost
  vars: 
    - ri_profile_name: "aws-rds-crunchy-data-postgresql-9-stig-baseline"
    - pg_dba_password: 'password'
    - pg_user_password: "{{ pgpassword.stdout }}"
    - pg_user: 'postgresu'
    - pg_owner: 'postgresm'
    - pg_host: "{{ lookup('env','PGHOST') }}"
    - ri_output_dir: "/tmp/output" 
  tasks:
    - name: Get the date and time
      shell: "date +%Y%m%d-%M:%S"
      register: time
    
    - name: Create output directory
      file: 
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ ri_output_dir }}"
        - "/share/{{ ri_profile_name }}/libraries/"
        - "/share/pgstigcheck-inspec/libraries/"
      tags: run-inspec
  
    - name: Find all .rb files for patching of postgres_session calls
      find:
        paths: ['/share/pgstigcheck-inspec/controls']
        patterns: '*.rb'
      register: inspec_control
      tags: run-inspec

    - name: Replace all postgres_session calls to include port
      lineinfile:
        regexp: "postgres_session(input('pg_dba'), input('pg_dba_password'), input('pg_host'))"
        line: "postgres_session(input('pg_dba'), input('pg_dba_password'), input('pg_host'), input('pg_port'))"
        path: '/share/{{ ri_profile_name }}/controls/overlay.rb'
      tags: run-inspec

    - name: Replace all postgres_session calls in orginal source
      lineinfile:
        path: "{{ item.path }}"
        regexp: "postgres_session(pg_dba, pg_dba_password, pg_host)"
        line: "postgres_session(pg_dba, pg_dba_password, pg_host, pg_port)"
      with_items: 
         - "{{ inspec_control.files }}"
      tags: run-inspec
  
    - name: Create tempoarary directory
      tempfile:
        state: directory
      register: temp_dir
 
    - name: Get AWS certificate files
      get_url:
        url: "https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem"
        dest: "{{ temp_dir.path }}/rds-combined-ca-bundle.pem"
        validate_certs: no

    - name: Get PGPASSWORD
      shell: aws rds generate-db-auth-token --hostname=$RDSHOST --port=$PGPORT --username=$PGUSER --region=$REGION
      register: pgpassword

    #- name: Replace attribute parameters with overrides 
    #  lineinfile:
    #    path: "{{ ri_profile_name }}/attributes.yaml"
    #    regexp: "{{ item.regexp }}"
    #    line: "{{ item.line }}"
    #  with_items: "{{ ri_config_params }}"
    - name: Template out the inputs file
      template:
        src: "/share/inputs.j2"
        dest: "/share/{{ ri_profile_name }}/inputs.yaml"
            
    - name: Run login command
      shell: psql -h $PGHOST -p $PGPORT "dbname=$PGDATABASE user=postgresm sslrootcert={{ temp_dir.path }}/rds-combined-ca-bundle.pem sslmode=verify-ca"
      register: pglogin

    - name: Debug for run visibility
      debug:
        msg: "Run: template approach" 
    
    - name: Run the inspec command
      shell: >
        inspec exec /share/{{ ri_profile_name }}
        --input pg_user='postgresu'
        --input pg_dba='postgresm'
        --input-file /share/{{ ri_profile_name }}/inputs.yaml
        --reporter cli json:{{ ri_output_dir }}/{{ ri_profile_name }}-{{ time.stdout }}.json

    - name: Upload to S3
      command: aws s3 cp {{ ri_output_dir }}/ansible-{{ time.stdout }}.json s3://$S3_BUCKET
